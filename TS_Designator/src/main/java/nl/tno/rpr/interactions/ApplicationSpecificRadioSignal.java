// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2020/03/27 12:19:05

package nl.tno.rpr.interactions;

import nl.tno.rpr.datatypes.TacticalDataLinkTypeEnum16;
import nl.tno.rpr.datatypes.UserProtocolEnum32;

/** A radio signal that can be used for an application specific encoding scheme. */
public class ApplicationSpecificRadioSignal extends RadioSignal {

  /** The object instance ID of the radio transmitting this signal. */
  String HostRadioIndex;

  /** The rate at which the data is being transmitted. */
  int DataRate;

  /** The length of the signal data. */
  short SignalDataLength;

  /** The signal data. */
  byte[] SignalData;

  /** The type of tactical data link used to transmitted this signal (if any). */
  TacticalDataLinkTypeEnum16 TacticalDataLinkType;

  /** The number of tactical data link messages contained in this signal. */
  short TDLMessageCount;

  /** The ID of the user protocol in use. */
  UserProtocolEnum32 UserProtocolID;

  public String getHostRadioIndex() {
    return this.HostRadioIndex;
  }

  public void setHostRadioIndex(String HostRadioIndex) {
    this.HostRadioIndex = HostRadioIndex;
  }

  public int getDataRate() {
    return this.DataRate;
  }

  public void setDataRate(int DataRate) {
    this.DataRate = DataRate;
  }

  public short getSignalDataLength() {
    return this.SignalDataLength;
  }

  public void setSignalDataLength(short SignalDataLength) {
    this.SignalDataLength = SignalDataLength;
  }

  public byte[] getSignalData() {
    return this.SignalData;
  }

  public void setSignalData(byte[] SignalData) {
    this.SignalData = SignalData;
  }

  public TacticalDataLinkTypeEnum16 getTacticalDataLinkType() {
    return this.TacticalDataLinkType;
  }

  public void setTacticalDataLinkType(TacticalDataLinkTypeEnum16 TacticalDataLinkType) {
    this.TacticalDataLinkType = TacticalDataLinkType;
  }

  public short getTDLMessageCount() {
    return this.TDLMessageCount;
  }

  public void setTDLMessageCount(short TDLMessageCount) {
    this.TDLMessageCount = TDLMessageCount;
  }

  public UserProtocolEnum32 getUserProtocolID() {
    return this.UserProtocolID;
  }

  public void setUserProtocolID(UserProtocolEnum32 UserProtocolID) {
    this.UserProtocolID = UserProtocolID;
  }
}
