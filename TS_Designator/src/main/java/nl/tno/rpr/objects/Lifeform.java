// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2020/03/27 12:19:05

package nl.tno.rpr.objects;

import nl.tno.rpr.datatypes.ComplianceStateEnum32;
import nl.tno.rpr.datatypes.RPRboolean;
import nl.tno.rpr.datatypes.StanceCodeEnum32;
import nl.tno.rpr.datatypes.WeaponStateEnum32;

/** A living military platform (human or not). */
public class Lifeform extends PhysicalEntity {

  /** Whether the lifeform's flash lights are on or not. */
  RPRboolean FlashLightsOn;

  /** The stance of the lifeform. */
  StanceCodeEnum32 StanceCode;

  /** The state of the soldier's primary weapon system. */
  WeaponStateEnum32 PrimaryWeaponState;

  /** The state of the soldier's secondary weapon system. */
  WeaponStateEnum32 SecondaryWeaponState;

  /** The compliance of the lifeform. */
  ComplianceStateEnum32 ComplianceState;

  public RPRboolean getFlashLightsOn() {
    return this.FlashLightsOn;
  }

  public void setFlashLightsOn(RPRboolean FlashLightsOn) {
    this.FlashLightsOn = FlashLightsOn;
  }

  public StanceCodeEnum32 getStanceCode() {
    return this.StanceCode;
  }

  public void setStanceCode(StanceCodeEnum32 StanceCode) {
    this.StanceCode = StanceCode;
  }

  public WeaponStateEnum32 getPrimaryWeaponState() {
    return this.PrimaryWeaponState;
  }

  public void setPrimaryWeaponState(WeaponStateEnum32 PrimaryWeaponState) {
    this.PrimaryWeaponState = PrimaryWeaponState;
  }

  public WeaponStateEnum32 getSecondaryWeaponState() {
    return this.SecondaryWeaponState;
  }

  public void setSecondaryWeaponState(WeaponStateEnum32 SecondaryWeaponState) {
    this.SecondaryWeaponState = SecondaryWeaponState;
  }

  public ComplianceStateEnum32 getComplianceState() {
    return this.ComplianceState;
  }

  public void setComplianceState(ComplianceStateEnum32 ComplianceState) {
    this.ComplianceState = ComplianceState;
  }
}
