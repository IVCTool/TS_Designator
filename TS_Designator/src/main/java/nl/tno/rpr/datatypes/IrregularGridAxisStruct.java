// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2020/03/27 12:19:05

package nl.tno.rpr.datatypes;

/** Record specifying irregular (variable spacing) axis data */
public class IrregularGridAxisStruct {

  /**
   * Specifies the value that linearly scales the coordinates of the grid locations for the Xi axis
   */
  double CoordinateScale;

  /**
   * Specifies the constant offset value that shall be applied to the grid locations for the Xi axis
   */
  double CoordinateOffset;

  /**
   * Specifies the coordinate values for the Ni grid locations along the irregular (variable
   * spacing) Xi axis
   */
  short[] NumberOfGridLocations__A__GridLocations;

  /** Brings the record length to a 64-bit boundary */
  byte[] PaddingTo64;

  public double getCoordinateScale() {
    return this.CoordinateScale;
  }

  public void setCoordinateScale(double CoordinateScale) {
    this.CoordinateScale = CoordinateScale;
  }

  public double getCoordinateOffset() {
    return this.CoordinateOffset;
  }

  public void setCoordinateOffset(double CoordinateOffset) {
    this.CoordinateOffset = CoordinateOffset;
  }

  public short[] getNumberOfGridLocations__A__GridLocations() {
    return this.NumberOfGridLocations__A__GridLocations;
  }

  public void setNumberOfGridLocations__A__GridLocations(
      short[] NumberOfGridLocations__A__GridLocations) {
    this.NumberOfGridLocations__A__GridLocations = NumberOfGridLocations__A__GridLocations;
  }

  public byte[] getPaddingTo64() {
    return this.PaddingTo64;
  }

  public void setPaddingTo64(byte[] PaddingTo64) {
    this.PaddingTo64 = PaddingTo64;
  }
}
